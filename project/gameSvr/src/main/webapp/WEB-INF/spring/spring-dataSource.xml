<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <context:property-placeholder location="/WEB-INF/properties/jdbc.properties,/WEB-INF/properties/app.properties"
                                  local-override="true"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 -->
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}">
        </property>
        <!-- 初始化时获取连接个数 -->
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}">
        </property>
        <!-- 最大空闲时间,30秒内未使用则连接被丢弃。若为0则永不丢弃 -->
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
        <!-- 连接池中保留的最大连接数 -->
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
        <!-- 连接池中保留的最小连接数 -->
        <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
        <!-- 两次连接中间隔时间，单位毫秒 -->
        <property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}"></property>
        <!-- 定义在从数据库获取新连接失败后重复尝试的次数 -->
        <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"></property>
        <!-- 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
            获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
        <property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}"></property>
    </bean>

    <!-- 定义容器中用到的JNDI连接池名称 -->
    <!-- 如果使用TOMCAT，需要加上前缀: java:comp/env/ -->
    <!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>java:comp/env/jdbc/DC</value>
        </property>
    </bean> -->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--dataSource属性指定要用到的连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!--configLocation属性指定mybatis的核心配置文件 -->
        <property name="configLocation" value="/WEB-INF/mybatis/mybatis-config.xml"/>
        <!-- 所有配置的mapper文件 -->
        <property name="mapperLocations">
            <array>
                <value>classpath*:mybatis/mapper/*.xml</value>
            </array>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.gamesvr"/>
    </bean>

    <!-- 启动对@AspectJ注解的支持 -->
    <context:annotation-config />

    <!-- 自动扫描组件，这里要把controler下面的 controller去除，他们是在spring3-servlet.xml中配置的，如果不去除会影响事务管理的-->
    <context:component-scan base-package="com.gamesvr">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 配置事务 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 事务控制位置，一般在业务层service -->
    <aop:config>
        <aop:pointcut id="fooServiceMethods" expression="execution(* com.gamesvr.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceMethods"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="query*" propagation="REQUIRED" read-only="true" />
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*Query" propagation="REQUIRED" read-only="true" />
            <tx:method name="*Count" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>
    <!-- 配置事务结束 -->

    <aop:aspectj-autoproxy />
    <!-- 业务AOP开始 -->
    <bean id="operLogAdvice" class="com.gamesvr.aop.OperLogAspect">
        <property name="operLogService"><ref bean="operLogService" /> </property>
    </bean>
</beans>
